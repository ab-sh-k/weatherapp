{"version":3,"sources":["AppBar.js","Component.js","Tabs.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","marginLeft","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","props","classes","className","AppBar","style","background","Toolbar","IconButton","edge","aria-label","InputBase","id","placeholder","input","inputProps","onClick","getWeatherForecast","float","minWidth","paper","pad1","paddingRight","lh","lineH","lineHeight","dateToDay","dateFromAPI","date","Date","todayDate","getDate","0","1","2","3","4","5","6","getDay","getMonth","FolderList","arr","to","days","data","AllFiveDays","dateDataFromAPI","AllDate","forEach","element","push","dt_txt","filter","value","index","self","indexOf","fetchDistinctDates","list","j","i","utcDate","day","ListItemComponent","weather","main","humidity","iconUrl","icon","maxTemp","temp_max","minTemp","temp_min","shift","List","ListItem","ListItemText","primary","secondary","Typography","variant","component","ListItemAvatar","Avatar","src","Divider","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","event","preventDefault","NavTabs","React","useState","setValue","Tabs","onChange","newValue","label","href","API_KEY","json","require","obj","JSON","parse","stringify","App","state","undefined","e","a","city","document","getElementById","city_ID","fetch","api_call","res","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0aed3fb1.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: '100%',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 2),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '70%',\n            '&:focus': {\n                width: '80%',\n            },\n        },\n    },\n}));\n\n//38.45   40.26\nexport default props => {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" style={{ background: \"#00838f\" }}>\n          <Toolbar>\n\n            <div className={classes.search}>\n                <IconButton\n                    edge=\"start\"\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                ><MenuIcon />\n                </IconButton>\n              <InputBase id=\"city\"\n                  placeholder=\"Searchâ€¦\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{ 'aria-label': 'search' }}\n              />\n                <IconButton onClick={props.getWeatherForecast} style={{ float: \"right\"}}\n                    edge=\"start\"\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                ><SearchIcon />\n                </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n  );\n}\n/*\n  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n* */","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Img from \"react-image\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        minWidth: \"100px\",\n        backgroundColor: theme.palette.background.paper\n    }\n}));\n\nconst padding = makeStyles({\n    pad1: {\n        paddingRight: \"10px\"\n    }\n});\n\nconst lh = makeStyles({\n    lineH: {\n        lineHeight: 0.35\n    }\n});\n\n\nconst dateToDay = (dateFromAPI)=>{\n    let date = new Date(dateFromAPI);\n    // console.log(date.getDate())\n    const dict = {\n        0: \"Sunday\",\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thrusday\",\n        5: \"Friday\",\n        6: \"Saturday\",\n    };\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"April\", \"May\", \"June\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n    let todayDate = new Date();\n    // console.log(todayDate)\n    // console.log(date.getUTCDate() === todayDate.getUTCDate());\n    // console.log(\"check\", (todayDate.getUTCDate()+1))\n    if(todayDate.getDate() === date.getDate())\n    return \"Today\";\n    else if((todayDate.getDate()+1) === (date.getDate()))\n    return \"Tomorrow\";\n    else\n    return dict[date.getDay()]+\", \"+date.getDate()+\" \"+months[date.getMonth()];\n    \n};\nconst addUTC = (dateDataFromAPI)=>{\n    return dateDataFromAPI+\" UTC\";\n}\nconst fetchDistinctDates = (dateDataFromAPI)=>{\n    let AllDate = [];\n    dateDataFromAPI.forEach(element => {\n        // console.log(new Date(element.dt_txt).getDate())\n        AllDate.push(new Date(`${element.dt_txt} UTC`).getDate());\n    });\n    function onlyUnique(value, index, self) { \n        return self.indexOf(value) === index;\n    }\n    \n    // // usage example:\n\n    let unique = AllDate.filter(onlyUnique);\n    return unique;\n};\nconst FolderList = props => {\n    const classes = useStyles();\n    let arr = [];\n    let to = 1;\n    if(props.days==='tomorrow'){\n        to = 2;\n    }\n    else if(props.days==='five'){\n        to = 5;\n    }\n    // console.log(props.data);\n    if(props.data){\n        const AllFiveDays = fetchDistinctDates(props.data.list);\n        let j = 0;\n        for(let i=0; i < to;){\n            let utcDate = addUTC(props.data.list[j].dt_txt);\n            let day = dateToDay(utcDate);\n            if(AllFiveDays[i]===new Date(props.data.list[j].dt_txt).getDate()){\n                arr.push(<ListItemComponent\n                    day={day}\n                    weather={props.data.list[j].weather[0].main}\n                    humidity={props.data.list[j].main.humidity+\"%\"}\n                    iconUrl={\"http://openweathermap.org/img/w/\" + props.data.list[j].weather[0].icon + \".png\"}\n                    maxTemp={props.data.list[j].main.temp_max}\n                    minTemp={props.data.list[j].main.temp_min}\n                />);\n                i++;\n            }\n            j++;\n        }\n        if(props.days==='tomorrow'){\n            arr.shift();\n        }\n    }\n\n    return (\n        <List className={classes.root}>\n            {arr}\n        </List>\n    );\n};\nexport default FolderList\n\nfunction  ListItemComponent(props) {\n    return (\n        <ListItem>\n            <ListItemText primary={props.day} secondary={props.weather}/>\n            <Typography\n                variant=\"h6\"\n                component=\"h3\"\n                color=\"primary\"\n                className={padding().pad1}\n            >\n                {props.humidity}\n            </Typography>\n            <ListItemAvatar>\n                <Avatar>\n                    <Img src={props.iconUrl} />\n                </Avatar>\n            </ListItemAvatar>\n            <div>\n                <p className={lh().lineH}>{props.maxTemp}&deg;</p>\n                <p className={lh().lineH}>{props.minTemp}&deg;</p>\n            </div>\n            <Divider/>\n        </ListItem>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport FolderList from \"./Component\";\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `nav-tab-${index}`,\n        'aria-controls': `nav-tabpanel-${index}`,\n    };\n}\n\nfunction LinkTab(props) {\n    return (\n        <Tab\n            component=\"a\"\n            onClick={event => {\n                event.preventDefault();\n            }}\n            {...props}\n        />\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function NavTabs(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" style={{ background: \"#00838f\" }}>\n                <Tabs\n                    variant=\"fullWidth\"\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"nav tabs example\"\n                >\n                    <LinkTab label=\"TODAY\" href=\"/drafts\" {...a11yProps(0)} />\n                    <LinkTab label=\"TOMORROW\" href=\"/trash\" {...a11yProps(1)} />\n                    <LinkTab label=\"5 DAYS\" href=\"/spam\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <FolderList days=\"today\" data={props.data}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <FolderList days=\"tomorrow\" data={props.data}/>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <FolderList days=\"five\" data={props.data}/>\n            </TabPanel>\n        </div>\n    );\n}\n","import React from 'react';\nimport SearchAppBar from './AppBar';\nimport NavTabs from \"./Tabs\";\n\nconst API_KEY = '03dc148ebd02cb8807a6e29f197cb618';\n\n\nconst json = require('./citylist.json');\nconst obj = JSON.parse(JSON.stringify(json));\n\nclass App extends React.Component {\n    state = {\n        data:undefined\n    }\n\n\n    getWeatherForecast = async (e) => {\n        e.preventDefault();\n        let city = document.getElementById('city');\n       \n        const city_ID = obj[city.value];  //1273294\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?id=${city_ID}&appid=${API_KEY}&units=metric`);\n        const res = await api_call.json();\n        \n        this.setState({\n           data: res\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <SearchAppBar getWeatherForecast={this.getWeatherForecast}/>\n                <NavTabs data={this.state.data}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}